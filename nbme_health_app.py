# -*- coding: utf-8 -*-
"""NBME-health-app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lIC0U6r-u1roPgRXvQhhQmdRVYXI8GPF
"""

import streamlit as st
import base64
import sklearn
import numpy as np
import pickle as pkl
from sklearn.preprocessing import MinMaxScaler
scal=MinMaxScaler()

from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer
from sklearn.compose import ColumnTransformer
vectorizer1 = TfidfVectorizer(max_features=500,min_df=0.00009, smooth_idf=True,tokenizer = lambda x: x.split(' '), 
                        lowercase=True, analyzer='word',ngram_range=(1,3))
vectorizer2 = TfidfVectorizer(max_features=500,min_df=0.00009, smooth_idf=True,tokenizer = lambda x: x.split(' '), 
                        lowercase=True, analyzer='word',ngram_range=(1,3))
column_transformer = ColumnTransformer(
    [('tfidf1', vectorizer1, 'pn_history'), 
    ('tfidf2', vectorizer2, 'feature_text')],
    remainder='passthrough')

#Load the saved model
model=pkl.load(open("final_model.p","rb"))



st.set_page_config(page_title="NBME Health App",page_icon="⚕️",layout="centered",initial_sidebar_state="expanded")



def preprocess(patient_note,feature_text):   
 
    
    df1=pd.DataFrame({'pn_history':patient_note,'feature_text':feature_text})
    df1['feature_text']=df1['feature_text'].str.replace("-OR-", "; ").str.replace("-", " ")
    df1['pn_history']=df1['pn_history'].str.translate ({ord(c): " " for c in "!@#$%^&*()[]{}:,./<>?\|`~-=_+"})

    df1['pn_history']=df1['pn_history'].apply(lambda x: x.lower())
    df1['feature_text']=df1['feature_text'].apply(lambda x: x.lower())

    user_input=column_transformer.transform(df1)
    prediction = model.predict(user_input)

    return prediction



st.title("NBME keyword prediction")
html_temp = """
    <div style="background-color:tomato;padding:10px">
    <h2 style="color:white;text-align:center;">Streamlit Bank Authenticator ML App </h2>
    </div>
    """
st.markdown(html_temp,unsafe_allow_html=True)
patient_note = st.text_input("patient_note","Type Here")
feature_text = st.text_input("feature_text","Type Here")    



pred=preprocess(patient_note,feature_text)


if st.button("Predict"):
  st.success('The output is {}'.format(pred))
    
st.sidebar.subheader("About App")

st.sidebar.info("This web app is helps you to find out whether you are at a risk of developing a heart disease.")
st.sidebar.info("Enter the required fields and click on the 'Predict' button to check whether you have a healthy heart")
st.sidebar.info("Don't forget to rate this app")



feedback = st.sidebar.slider('How much would you rate this app?',min_value=0,max_value=5,step=1)

if feedback:
  st.header("Thank you for rating the app!")
  st.info("Caution: This is just a prediction and not doctoral advice. Kindly see a doctor if you feel the symptoms persist.")